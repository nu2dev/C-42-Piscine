diff --git a/check_inputs.c b/check_inputs.c
new file mode 100644
index 0000000..d98f5cb
--- /dev/null
+++ b/check_inputs.c
@@ -0,0 +1,81 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   check_inputs.c                                     :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 14:27:49 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 19:46:22 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#include "rush.h"
+
+int		check_digit(char i)
+{
+	if (i >= '0' && i <= '9')
+		return (0);
+	else
+		return (1);
+}
+
+int		check_space(char s)
+{
+	if (s == ' ')
+		return (0);
+	else
+		return (1);
+}
+
+void	rem_space(char *str)
+{
+	int	i;
+	int	j;
+
+	i = 0;
+	j = 0;
+	while ((str[j - 1] && str[j]) || j == 0)
+	{
+		str[i] = str[j];
+		i++;
+		j += 2;
+	}
+	str[i] = '\0';
+}
+
+int		find_max(char *str)
+{
+	int i;
+	int sum;
+
+	i = 0;
+	sum = 0;
+	while (str[i])
+	{
+		if (!check_digit(str[i]))
+			sum++;
+		i++;
+	}
+	return ((sum / 4));
+}
+
+int		check_inputs(char *str, int max)
+{
+	int	i;
+
+	i = 0;
+	while (str[i])
+	{
+		if (i % 2 == 0)
+			if (!(str[i] >= '1' && str[i] <= (max + '0')))
+				return (1);
+		i++;
+	}
+	i = (i + 1) / 2;
+	if (!(i == 12 || i == 16 || i == 20 || i == 24 || i == 28 || i == 32
+			|| i == 36))
+		return (1);
+	rem_space(str);
+	return (0);
+}
diff --git a/creat_arr.c b/creat_arr.c
new file mode 100644
index 0000000..83b663c
--- /dev/null
+++ b/creat_arr.c
@@ -0,0 +1,74 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   creat_arr.c                                        :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 15:37:17 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 19:51:13 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#include "rush.h"
+
+int		find_max(char *str)
+{
+	int i;
+	int sum;
+
+	i = 0;
+	sum = 0;
+	while (str[i])
+	{
+		if (!check_digit(str[i]))
+			sum++;
+		i++;
+	}
+	return ((sum / 4));
+}
+
+void	fill_arr(int **numarr, int max, char *inputs)
+{
+	int	i;
+
+	i = 0;
+	while (++i <= max)
+		numarr[0][i] = inputs[i - 1] - '0';
+	i = 0;
+	while (++i <= max)
+		numarr[max + 1][i] = inputs[i + 3] - '0';
+	i = 0;
+	while (++i <= max)
+		numarr[i][0] = inputs[i + 7] - '0';
+	i = 0;
+	while (++i <= max)
+		numarr[i][max + 1] = inputs[i + 11] - '0';
+}
+
+int		**create_arr(int max, char *inputs)
+{
+	int	i;
+	int	j;
+	int	**numarr;
+
+	if (!(numarr = (int **)malloc(sizeof(int *) * max + 2)))
+		return (0);
+	i = 0;
+	while (i < max + 2)
+	{
+		if (!(numarr[i] = (int *)malloc(sizeof(int) * max + 2)))
+			return (0);
+		i++;
+	}
+	i = 0;
+	while (i < max + 2)
+	{
+		j = -1;
+		while (++j < max + 2)
+			numarr[i][j] = 0;
+		i++;
+	}
+	fill_arr(numarr, max, inputs);
+	return (numarr);
+}
diff --git a/main.c b/main.c
new file mode 100644
index 0000000..22f9dca
--- /dev/null
+++ b/main.c
@@ -0,0 +1,44 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   main.c                                             :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 15:23:34 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 20:35:06 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#include "rush.h"
+
+int	main(int argc, char **argv)
+{
+	int	**numarr;
+	int max;
+-
+	if (argc < 2)
+	{
+		write(1, "Error\n", 6);
+		return (1);
+	}
+	max = find_max(arv[1]);
+	if (check_inputs(argv[1], max))
+	{
+		write(1, "Error\n", 6);
+		return (1);
+	}
+
+	if(!(numarr = create_arr(max, argv[1])))
+	{
+		write(1, "Error\n", 6);
+		return (0);
+	}
+	if (solve(numarr, max, 1, 1))
+	{
+		write(1, "Error\n", 6);
+		return (0);
+	}
+	print_arr(numarr, max);
+	return (0);
+}
diff --git a/rush.h b/rush.h
new file mode 100644
index 0000000..3e85747
--- /dev/null
+++ b/rush.h
@@ -0,0 +1,33 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   rush.h                                             :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 15:24:21 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 20:33:51 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#ifndef RUSH_H
+# define RUSH_H
+
+# include <unistd.h>
+# include <stdlib.h>
+
+int		check_inputs(char *str, int	max);
+int		check_digit(char	i);
+int		check_space(char	s);
+int		find_max(char	*str);
+void	rem_space(char *str);
+int		**create_arr(int	max, char	*inputs);
+int		check_cols_up(int **numarr, int x, int max);
+int		check_cols_down(int **numarr, int x, int max);
+int		check_row_left(int **numarr, int y, int max);
+int		check_row_right(int **numarr, int y, int max);
+int		check_point(int **numarr, int max);
+int		check(int **numarr, int i, int x, int y, int max);
+int		solve(int	**numarr, int	max, int	a, int	b);
+int		print_arr(int	**numarr, int	max);
+#endif
diff --git a/solve.c b/solve.c
new file mode 100644
index 0000000..a4a11c2
--- /dev/null
+++ b/solve.c
@@ -0,0 +1,81 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   solve.c                                            :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 16:45:12 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 20:31:59 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#include "rush.h"
+
+int	check(int **numarr, int i, int x, int y, int max)
+{
+	int row;
+	int column;
+
+	row = 1;
+	column = 1;
+	while (row <= max)
+	{
+		if (i == numarr[row][y])
+			return (1);
+		row++;
+	}
+	while (column <= max)
+	{
+		if (i == numarr[x][column])
+			return (1);
+		column++;
+	}
+	return (0);
+}
+
+int	solve(int **numarr, int max, int x, int y)
+{
+	int i;
+
+	i = 1;
+	while (1)
+	{
+		while (i <= max && check(numarr, i, x, y, max))
+			i++;
+		if (i <= max)
+			numarr[x][y] = i;
+		else
+		{
+			numarr[x][y] = 0;
+			return (1);
+		}
+		if (x == max && y == max)
+		{
+			if (check_point(numarr, max))
+			{
+				if (i >= max)
+				{
+					numarr[x][y] = 0;
+					return (1);
+				}
+				else
+					continue;
+			}
+			else
+				return (0);
+		}
+		if (x == max)
+		{
+			if (solve(numarr, max, 1, y + 1))
+				continue;
+			return (0);
+		}
+		else
+		{
+			if (solve(numarr, max, x + 1, y))
+				continue;
+			return (0);
+		}
+	}
+}
diff --git a/solve_extra.c b/solve_extra.c
new file mode 100644
index 0000000..528351a
--- /dev/null
+++ b/solve_extra.c
@@ -0,0 +1,133 @@
+/* ************************************************************************** */
+/*                                                                            */
+/*                                                        :::      ::::::::   */
+/*   solve_extra.c                                      :+:      :+:    :+:   */
+/*                                                    +:+ +:+         +:+     */
+/*   By: unarasim <unarasim@student.42kl.edu>       +#+  +:+       +#+        */
+/*                                                +#+#+#+#+#+   +#+           */
+/*   Created: 2021/02/28 16:45:12 by unarasim          #+#    #+#             */
+/*   Updated: 2021/02/28 20:19:19 by unarasim         ###   ########.fr       */
+/*                                                                            */
+/* ************************************************************************** */
+
+#include "rush.h"
+
+int	check_cols_up(int **numarr, int x, int max)
+{
+	int	cp;
+	int y;
+	int i;
+
+	cp = 1;
+	y = 1;
+	i = 1;
+	while (y + 1 <= max)
+	{
+		if (numarr[x][y] < numarr[x][y + i])
+		{
+			cp++;
+			y += i;
+			i = 1;
+		}
+		else
+			i++;
+	}
+	if (cp == numarr[x][0])
+		return (0);
+	return (1);
+}
+
+int	check_cols_down(int **numarr, int x, int max)
+{
+	int	cp;
+	int	y;
+	int	i;
+
+	cp = 1;
+	y = max;
+	i = 1;
+	while (y - 1 >= 1)
+	{
+		if (numarr[x][y] < numarr[x][y - i])
+		{
+			cp++;
+			y -= i;
+			i = 1;
+		}
+		else
+			i++;
+	}
+	if (cp == numarr[x][max + 1])
+		return (0);
+	return (1);
+}
+
+int	check_row_left(int **numarr, int y, int max)
+{
+	int	cp;
+	int	x;
+	int	i;
+
+	cp = 1;
+	x = 1;
+	i = 1;
+	while (x + 1 <= max)
+	{
+		if (numarr[x][y] < numarr[x + i][y])
+		{
+			cp++;
+			x += i;
+			i = 1;
+		}
+		else
+			i++;
+	}
+	if (cp == numarr[0][y])
+		return (0);
+	return (1);
+}
+
+int	check_row_right(int **numarr, int y, int max)
+{
+	int	cp;
+	int	x;
+	int	i;
+
+	x = max;
+	cp = 1;
+	i = 1;
+	while (x - i >= 1)
+	{
+		if (numarr[x][y] < numarr[x - i][y])
+		{
+			cp++;
+			x -= i;
+			i = 1;
+		}
+		else
+			i++;
+	}
+	if (cp == numarr[max + 1][y])
+		return (0);
+	return (1);
+}
+
+int	check_point(int **numarr, int max)
+{
+	int	i;
+
+	i = 1;
+	while (i <= max)
+	{
+		if (check_cols_up(numarr, i, max))
+			return (1);
+		if (check_cols_down(numarr, i, max))
+			return (1);
+		if (check_row_left(numarr, i, max))
+			return (1);
+		if (check_row_right(numarr, i, max))
+			return (1);
+		i++;
+	}
+	return (0);
+}
